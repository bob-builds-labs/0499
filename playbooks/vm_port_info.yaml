
- name: Portgroups
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:  
  - name: Get the dvswitch 
    vmware.vmware_rest.vcenter_network_info:
      filter_types: DISTRIBUTED_PORTGROUP
      filter_names: storage + backup 
    register: my_portgroup

  - debug:
      msg: "{{ my_portgroup }}"
      verbosity: 0
  - name: Look up VMÂ´s in the inventory
    register: search_result
    vmware.vmware_rest.vcenter_vm_info:

  - set_fact: vmlist="{{ search_result.value  |  json_query(query) | json_query('[*].vm') }}"
    vars:   
      query: "[?contains(name,'{{ item }}')]"            
    with_items: "{{ vm_names.split(',') }}" 

  - name: show vmlist
    debug:
     msg: "{{ vmlist }}"
  - name: vm info    
    vmware.vmware_rest.vcenter_vm_info:
      vm: '{{ item }}'
    register: vm_info
    with_items: "{{ vmlist }}" 
  - name: show vm info
    debug:
     msg: "{{ vm_info }}"    
  - name: Collect a list of the NIC for a given VM
    vmware.vmware_rest.vcenter_vm_hardware_ethernet_info:
      vm: "{{ item }}"
    register: vm_nic
    with_items: "{{ vmlist }}" 

  - name: Attach a VM to a dvswitch
    vmware.vmware_rest.vcenter_vm_hardware_ethernet:
      vm: "{{ item }}"
      backing:
        type: DISTRIBUTED_PORTGROUP
        network: '{{ my_portgroup.value[0].network }}'
      start_connected: true
      pci_slot_number: 224
      nic: 4001
      state: "{{ state }}"
      type: "VMXNET3"
    with_items: "{{ vmlist }}" 
    register: vm_hardware_ethernet_1
    when: state in ('absent', 'present', 'connect')

  - name: Connect the Nic
    vmware.vmware_rest.vcenter_vm_hardware_ethernet:
      vm: "{{ item }}"
      start_connected: true
      nic: 4001
      backing:
        type: DISTRIBUTED_PORTGROUP
        network: '{{ my_portgroup.value[0].network }}'
      state: "connect"
    with_items: "{{ vmlist }}" 
    register: vm_hardware_ethernet_1
    when: state == "present"
    
    
      
