---
- name: AWX Organiszation Assets Templates Runbook
  hosts: localhost
  connection: local
  vars:
  vars_files:
    - ../vars/awx_vars.yaml
  collections:
    - ansible.controller
    - awx.awx
  tasks:
    - name: Add {{ ppdm.assets.label }} label to organization {{ awx.org }}
      label:
        name: "{{ ppdm.assets.label }}"
        organization: "{{ awx.org }}"
    - name: Create team {{ ppdm.agents.team.name }}
      team:
        name: "{{ ppdm.agents.team.name }}"
        description: "{{ ppdm.agents.team.description }}"
        organization: "{{ awx.org }}"
        state: present

    - name: "Add {{ ppdm.assets.jt.adhoc.protection  }}"
      job_template:
        name: "{{ ppdm.assets.jt.adhoc.protection  }}"
        description: AdHoc protection of Assets
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "130.0-playbook_start_asset_protection.yml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: name eq '{{ "{{ " }}namespace_name{{ " }}" }}' and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq '{{ "{{ " }}k8s_name{{ " }}" }}'
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: "Add {{ ppdm.assets.jt.query  }}"
      job_template:
        name: "{{ ppdm.assets.jt.query  }}"
        description: Query for Assets
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "30.0-playbook_get_assets.yml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: protectionStatus eq "{{  "{{ " }}protection_state{{ " }}" }}" and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq "{{ "{{ " }}k8s_name{{ " }}" }}"
        ask_variables_on_launch: true
        ask_credential_on_launch: true
