---
- name: AWX Organization Kubernetes Templates Runbook
  hosts: localhost
  connection: local
  vars:
  vars_files:
    - ../vars/awx_vars.yaml

  collections:
    - ansible.controller
    - awx.awx
  tasks:
    - name: Add {{ ppdm.k8s.label }} label to organization {{ awx.org }}
      label:
        name: "{{ ppdm.k8s.label }}"
        organization: "{{ awx.org }}"
    - name: Create team {{ ppdm.k8s.team }}
      team:
        name: "{{ ppdm.k8s.team }}"
        description: "{{ ppdm.k8s.team_description }}"
        organization: "{{ awx.org }}"
        state: present
      register: result

    - name: Lookup {{ ppdm.k8s.team }}
      set_fact:
        team: "{{ lookup('ansible.controller.controller_api', 'teams', query_params={ 'name': ppdm.k8s.team  }) }}"

    - name: Add user to organization {{ awx.org }}
      user:
        username: "{{ ppdm.k8s.user_1.username }}"
        password: "{{ ppdm.k8s.user_1.password }}"
        email: "{{ ppdm.k8s.user_1.email }}"
        organization: "{{ awx.org }}"
        state: present
        update_secrets: true

    - name: Give {{ ppdm.k8s.user_1.username }} permissions
      role:
        role: member
        teams:
          - "{{ team.id }}"
        user: "{{ ppdm.k8s.user_1.username }}"
        state: present

    - name: "Add {{ ppdm.k8s.jt.plc.list }}"
      job_template:
        name: "{{ ppdm.k8s.jt.plc.list}}"
        description: Get K8S Policies
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "110.0_get_protection_policies.yaml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          filter: assetType eq "KUBERNETES" # and name eq "{{ k8s_policy_name }}"
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: "Add {{ ppdm.k8s.jt.plc.create }}"
      job_template:
        name: "{{ ppdm.k8s.jt.plc.create}}"
        description: Get K8S Policies
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "130.2_playbook_add_k8s_policy_v3.yaml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          k8s_policy_name: unique_name
          description: your_description
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: "Add {{ ppdm.k8s.jt.namespace.adhoc_protection }}"
      job_template:
        name: "{{ ppdm.k8s.jt.namespace.adhoc_protection }}"
        description: AdHoc Backup K8S Namespace
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "30.0-playbook_get_assets.yml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: name eq '{{ "{{ " }}namespace_name{{ " }}" }}' and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq '{{ "{{ " }}k8s_name{{ " }}" }}'
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: "Add {{ ppdm.k8s.wjt.namespace.adhoc_protection }} WJT"
      workflow_job_template:
        name: "{{ ppdm.k8s.wjt.namespace.adhoc_protection }}"
        inventory: "{{ awx.inventory[0].name }}"
        destroy_current_nodes: true
        workflow_nodes:
          - identifier: "{{ ppdm.k8s.jt.namespace.adhoc_protection }}"
            unified_job_template:
              name: "{{ ppdm.k8s.jt.namespace.adhoc_protection }}"
              inventory:
                organization:
                  name: "{{ awx.org }}"
              type: job_template
            related:
              success_nodes: []
              failure_nodes: []
              always_nodes: []
              credentials: []
        survey_enabled: true
        survey_spec: |        
          {
          "description": "Kubernetes Asset Protection Survey",
          "name": "Query_K8S",
          "spec": [
            {
            "max": 1024,
            "min": 0,
            "type": "multiplechoice",
            "choices": [
                "api.openshift.demo.local"
            ],
            "default": "api.openshift.demo.local",
            "required": true,
            "variable": "k8s_name",
            "new_question": false,
            "question_name": "Kubernetes Cluster",
            "question_description": ""
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "",
                  "required": true,
                  "variable": "namespace_name",
                  "new_question": false,
                  "question_name": "Kubernetes Namespace",
                  "question_description": "Enter the name of the Kubernetes Namespace"
            }
          ]
          }

    - name: "Add {{ ppdm.k8s.jt.namespace.state }}"
      job_template:
        name: "{{ ppdm.k8s.jt.namespace.state }}"
        description: Query Namespaces by Protection State
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "30.0-playbook_get_assets.yml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: protectionStatus eq '{{ "{{ " }}protection_state{{ " }}" }}' and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq '{{ "{{ " }}k8s_name{{ " }}" }}'
        ask_variables_on_launch: true
        ask_credential_on_launch: true




    - name: Add {{ ppdm.k8s.wjt.namespace.state }}
      workflow_job_template:
        name: "{{ ppdm.k8s.wjt.namespace.state }}"
        inventory: "{{ awx.inventory[0].name }}"
        destroy_current_nodes: true
        workflow_nodes:
          - identifier: "{{ ppdm.k8s.wjt.namespace.state }}"
            unified_job_template:
              name: "{{ ppdm.k8s.jt.namespace.state  }}"
              inventory:
                organization:
                  name: "{{ awx.org }}"
              type: job_template
            related:
              success_nodes: []
              failure_nodes: []
              always_nodes: []
              credentials: []
        survey_enabled: true
        survey_spec: |
          {
          "description": "Kubernetes Asset Protection Survey",
          "name": "K8S_Asset_Survey",
          "spec": [
            {
            "max": 1024,
            "min": 0,
            "type": "multiplechoice",
            "choices": [
                "api.openshift.demo.local"
            ],
            "default": "api.openshift.demo.local",
            "required": true,
            "variable": "k8s_name",
            "new_question": false,
            "question_name": "Kubernetes Cluster",
            "question_description": ""
            },
            {
            "max": 1024,
            "min": 0,
            "type": "multiplechoice",
            "choices": [
                "PROTECTED",
                "UNPROTECTED"
            ],
            "default": "PROTECTED",
            "required": true,
            "variable": "protection_state",
            "new_question": false,
            "question_name": "Protection State",
            "question_description": "State of the Namespace"
            }            
          ]
          }

    - name: "Add {{ ppdm.k8s.jt.namespace.query  }}"
      job_template:
        name: "{{ ppdm.k8s.jt.namespace.query }}"
        description: Query a specific K8S Namespace
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "30.0-playbook_get_assets.yml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: name eq '{{ "{{ " }}namespace_name{{ " }}" }}' and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq '{{ "{{ " }}k8s_name{{ " }}" }}'
        #          protectionStatus eq "{{  "{{ " }}protection_state{{ " }}" }}" and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq "{{ "{{ " }}k8s_name{{ " }}" }}"
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: Add {{ ppdm.k8s.wjt.namespace.query }}
      workflow_job_template:
        name: "{{ ppdm.k8s.wjt.namespace.query }}"
        inventory: "{{ awx.inventory[0].name }}"
        destroy_current_nodes: true
        workflow_nodes:
          - identifier: "{{ ppdm.k8s.wjt.namespace.query }}"
            extra_data:
            unified_job_template:
              name: "{{ ppdm.k8s.jt.namespace.query }}"
              inventory:
                organization:
                  name: "{{ awx.org }}"
              type: job_template
            related:
              success_nodes: []
              failure_nodes: []
              always_nodes: []
              credentials: []
        survey_enabled: true
        survey_spec: |
          {
          "description": "Kubernetes Query Survey",
          "name": "Query_K8S",
          "spec": [
            {
            "max": 1024,
            "min": 0,
            "type": "multiplechoice",
            "choices": [
                "api.openshift.demo.local"
            ],
            "default": "api.openshift.demo.local",
            "required": true,
            "variable": "k8s_name",
            "new_question": false,
            "question_name": "Kubernetes Cluster",
            "question_description": ""
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "",
                  "required": true,
                  "variable": "namespace_name",
                  "new_question": false,
                  "question_name": "Kubernetes Namespace",
                  "question_description": "Enter the name of the Kubernetes Namespace"
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "multiplechoice",
                  "choices": [
                      "true",
                      "false"
                  ],
                  "default": "false",
                  "required": true,
                  "variable": "full_output",
                  "new_question": false,
                  "question_name": "DetailedOutput",
                  "question_description": "Display all Asset Details"
            }
          ]
          }

    - name: "Add {{ ppdm.k8s.jt.add_ppdm_rbac  }}"
      job_template:
        name: "{{ ppdm.k8s.jt.add_ppdm_rbac  }}"
        description: Add / Update Kubernetes Cluster to PPDM with RBAC
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "130.1_playbook_rbac_add_k8s_to_ppdm.yaml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
          - "openshift.demo.local"
        ask_credential_on_launch: true
        ask_variables_on_launch: true
        extra_vars:
          vcenter_address: vcenter01.demo.local
          use_fsagent: false
          parallel_pvc_backup: false
    - name: Add {{ ppdm.k8s.jt.plc.create }} JT
      job_template:
        name: "{{ ppdm.k8s.jt.plc.create}}"
        description: Get K8S Policies
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "130.2_playbook_add_k8s_policy_v3.yaml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
          - "{{ ppdd.credentials[0].name }}"
        extra_vars:
          k8s_policy_name: unique_name
          description: your_description
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: Add {{ ppdm.k8s.wjt.plc.create }} WJT
      workflow_job_template:
        name: "{{ ppdm.k8s.wjt.plc.create }}"
        inventory: "{{ awx.inventory[0].name }}"
        destroy_current_nodes: true
        workflow_nodes:
          - identifier: "{{ ppdm.k8s.wjt.plc.create }}"
            extra_data:
            unified_job_template:
              name: "{{ ppdm.k8s.jt.plc.create }}"
              inventory:
                organization:
                  name: "{{ awx.org }}"
              type: job_template
            related:
              success_nodes: []
              failure_nodes: []
              always_nodes: []
              credentials: []
        survey_enabled: true
        survey_spec: |
          {
          "description": "Kubernetes Policy Survey",
          "name": "Kubernetes Policy Name",
          "spec": [
            {
                  "max": 64,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "default_policy",
                  "required": true,
                  "variable": "k8s_policy_name",
                  "new_question": false,
                  "question_name": "Kubernetes Namespace",
                  "question_description": "Enter the name of the Kubernetes Policy to create"
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "default_policy_description",
                  "required": true,
                  "variable": "decscription",
                  "new_question": false,
                  "question_name": "Description",
                  "question_description": "Enter the description of the Kubernetes Policy to create"
            }
          ]
          }
    - name: "Add {{ ppdm.k8s.jt.namespace.add.name  }}"
      job_template:
        name: "{{ ppdm.k8s.jt.namespace.add.name }}"
        description: Add PPDM Namespace to PPDM Policy
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "120.2_playbook_add_assets_to_policy.yaml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: name eq '{{ "{{ " }}namespace_name{{ " }}" }}' and protectionStatus eq '{{ "{{ " }}protection_state{{ " }}" }}' and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq '{{ "{{ " }}k8s_name{{ " }}" }}'
          policy_name: '{{ "{{ " }}policy_name{{ " }}" }}'
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: "Add {{ ppdm.k8s.wjt.namespace.add.name }} WJT"
      workflow_job_template:
        name: "{{ ppdm.k8s.wjt.namespace.add.name }}"
        inventory: "{{ awx.inventory[0].name }}"
        destroy_current_nodes: true
        workflow_nodes:
          - identifier: "{{ ppdm.k8s.jt.namespace.add.name }}"
            unified_job_template:
              name: "{{ ppdm.k8s.jt.namespace.add.name }}"
              inventory:
                organization:
                  name: "{{ awx.org }}"
              type: job_template
            related:
              success_nodes: []
              failure_nodes: []
              always_nodes: []
              credentials: []
        survey_enabled: true
        survey_spec: |        
          {
          "description": "Kubernetes Asset Onboaring Survey",
          "name": "Query_K8S",
          "spec": [
            {
            "max": 1024,
            "min": 0,
            "type": "multiplechoice",
            "choices": [
                "api.openshift.demo.local"
            ],
            "default": "api.openshift.demo.local",
            "required": true,
            "variable": "k8s_name",
            "new_question": false,
            "question_name": "Kubernetes Cluster",
            "question_description": ""
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "openshift-image-registry",
                  "required": true,
                  "variable": "namespace_name",
                  "new_question": false,
                  "question_name": "Kubernetes Namespace",
                  "question_description": "Enter the name of the Kubernetes Namespace"
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "default_policy",
                  "required": true,
                  "variable": "policy_name",
                  "new_question": false,
                  "question_name": "Protection Policy Name",
                  "question_description": "Enter the name of the Protection Policy"
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "multiplechoice",
                  "choices": [
                      "UNPROTECTED"
                  ],
                  "default": "UNPROTECTED",
                  "required": true,
                  "variable": "protection_state",
                  "new_question": false,
                  "question_name": "Kubernetes Namespace Asset Protection State",
                  "question_description": "Valid Asset States to query "
            }                        
          ]
          }

    - name: "Add {{ ppdm.k8s.jt.namespace.remove.name  }}"
      job_template:
        name: "{{ ppdm.k8s.jt.namespace.remove.name }}"
        description: "{{ ppdm.k8s.jt.namespace.remove.description }}"
        job_type: "run"
        organization: "{{ awx.org }}"
        inventory: "{{ awx.inventory[0].name }}"
        project: "{{ ppdm.project.name }}"
        playbook: "120.2_playbook_remove_assets_from_policy.yaml"
        state: "present"
        labels:
          - "{{ ppdm.assets.label }}"
        credentials:
          - "{{ ppdm.credentials[0].name }}"
        extra_vars:
          asset_filter: name eq '{{ "{{ " }}namespace_name{{ " }}" }}' and protectionStatus eq '{{ "{{ " }}protection_state{{ " }}" }}' and type eq "KUBERNETES" and subtype eq "K8S_NAMESPACE" and details.k8s.inventorySourceName eq '{{ "{{ " }}k8s_name{{ " }}" }}'
          policy_name: '{{ "{{ " }}policy_name{{ " }}" }}'
        ask_variables_on_launch: true
        ask_credential_on_launch: true

    - name: "Add {{ ppdm.k8s.wjt.namespace.remove.name }} WJT"
      workflow_job_template:
        name: "{{ ppdm.k8s.wjt.namespace.remove.name }}"
        inventory: "{{ awx.inventory[0].name }}"
        destroy_current_nodes: true
        workflow_nodes:
          - identifier: "{{ ppdm.k8s.jt.namespace.remove.name }}"
            unified_job_template:
              name: "{{ ppdm.k8s.jt.namespace.remove.name }}"
              inventory:
                organization:
                  name: "{{ awx.org }}"
              type: job_template
            related:
              success_nodes: []
              failure_nodes: []
              always_nodes: []
              credentials: []
        survey_enabled: true
        survey_spec: |        
          {
          "description": "Kubernetes Asset Offboaring Survey",
          "name": "Query_K8S",
          "spec": [
            {
            "max": 1024,
            "min": 0,
            "type": "multiplechoice",
            "choices": [
                "api.openshift.demo.local"
            ],
            "default": "api.openshift.demo.local",
            "required": true,
            "variable": "k8s_name",
            "new_question": false,
            "question_name": "Kubernetes Cluster",
            "question_description": ""
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "openshift-image-registry",
                  "required": true,
                  "variable": "namespace_name",
                  "new_question": false,
                  "question_name": "Kubernetes Namespace",
                  "question_description": "Enter the name of the Kubernetes Namespace"
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "text",
                  "choices": "",
                  "default": "default_policy",
                  "required": true,
                  "variable": "policy_name",
                  "new_question": false,
                  "question_name": "Protection Policy Name",
                  "question_description": "Enter the name of the Protection Policy"
            },
            {
                  "max": 1024,
                  "min": 0,
                  "type": "multiplechoice",
                  "choices": [
                      "PROTECTED",
                      "DELETED"
                  ],
                  "default": "PROTECTED",
                  "required": true,
                  "variable": "protection_state",
                  "new_question": false,
                  "question_name": "Asset State",
                  "question_description": "Enter State Requirement for the Asset"
            }                        
          ]
          }

    - name: "Give {{ ppdm.k8s.user_1.username }} WJT permissions"
      role:
        role: execute
        workflows:
          - "{{ ppdm.k8s.wjt.namespace.query }}"
          - "{{ ppdm.k8s.wjt.namespace.state }}"
          - "{{ ppdm.k8s.wjt.namespace.adhoc_protection }}"
          - "{{ ppdm.k8s.wjt.namespace.add.name }}"
          - "{{ ppdm.k8s.wjt.namespace.remove.name }}"
          - "{{ ppdm.k8s.wjt.plc.create }}"
        user: "{{ ppdm.k8s.user_1.username }}"
        state: present

    - name: "Give {{ ppdm.k8s.user_1.username }} JT Read permissions"
      role:
        role: read
        user: "{{ ppdm.k8s.user_1.username }}"
        state: present
        job_templates:
          - "{{ ppdm.assets.jt.query  }}"
          - "{{ ppdm.k8s.jt.plc.create }}"
          - "{{ ppdm.k8s.jt.namespace.query }}"
          - "{{ ppdm.k8s.jt.namespace.state }}"
          - "{{ ppdm.k8s.jt.namespace.adhoc_protection }}"
          - "{{ ppdm.k8s.jt.namespace.add.name }}"
          - "{{ ppdm.k8s.jt.namespace.remove.name }}"

    - name: "Give {{ ppdm.k8s.user_1.username }} JT Execute permissions"
      role:
        role: execute
        user: "{{ ppdm.k8s.user_1.username }}"
        state: present
        job_templates:
          - "{{ ppdm.k8s.jt.add_ppdm_rbac  }}"
          - "{{ ppdm.k8s.jt.plc.list }}"
