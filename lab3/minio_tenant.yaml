apiVersion: v1
kind: Namespace
metadata:
  name: minio-tenant
---
apiVersion: v1
kind: Secret
metadata:
  name: storage-configuration
  namespace: minio-tenant
stringData:
  config.env: |-
    export MINIO_ROOT_USER="minioadmin"
    export MINIO_ROOT_PASSWORD="Password123!"
    export MINIO_BROWSER="on"
type: Opaque
---
apiVersion: v1
data:
  CONSOLE_ACCESS_KEY: Y29uc29sZQ==
  CONSOLE_SECRET_KEY: Y29uc29sZTEyMw==
kind: Secret
metadata:
  name: storage-user
  namespace: minio-tenant
type: Opaque
---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: '9000'
    prometheus.io/scrape: 'true'
  resourceVersion: '3904408'
  name: dpsminio
  namespace: minio-tenant
  labels:
    app: minio
spec:
  requestAutoCert: true
  serviceAccountName: ''
  serviceMetadata:
    consoleServiceAnnotations: {}
    consoleServiceLabels: {}
    minioServiceAnnotations: {}
    minioServiceLabels: {}
  subPath: ''
  certConfig: {}
  users:
  - name: storage-user
  externalClientCertSecrets: []
  env: []
  imagePullSecret: {}
  configuration:
    name: storage-configuration
  pools:
    - containerSecurityContext: {}
      name: pool-0
      securityContext: {}
      servers: 3
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 4Gi
          storageClassName: thin-csi-immediate
      volumesPerServer: 2
  podManagementPolicy: Parallel
  image: 'quay.io/minio/minio@sha256:f95dc4fc35439654a71300f765b485e114e7a720318dbce24ccd4f324d1475cf'
  features:
    bucketDNS: false
    domains: {}
  externalCaCertSecret: []
  mountPath: /export
  externalCertSecret: []
  priorityClassName: ''