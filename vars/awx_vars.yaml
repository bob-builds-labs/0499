aap_username: "{{ lookup('env','AAP_USERNAME') }}"
aap_password: "{{ lookup('env','AAP_PASSWORD') }}"
aap_hostname: "{{ lookup('env','AAP_HOSTNAME') }}"
awx:
  git_credentials_name: ansible_git
  ansible_ppdm:
    git_credentials_name: ansible_ppdm_source
  scm_username: bob-builds-labs
  scm_password: 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
  lab0499:
    git_credentials_name: 0499_source
  org: Dell Org
  description: Dell DPS Org
  custom_login_info: "Welcome to Dell PPDM Automation Platform Environment"
  galaxy_credentials_name: Ansible Galaxy
  playbook: "playbooks/aap.yaml"
  infra:
    label: awx_infra
    job_template: awx
    workflow_job_template: 0_Maintain AWX
  inventory:
    - project_name: 0499
      scm_branch: 19.19
      scm_url: https://github.com/bob-builds-labs/0499.git
      scm_description: Base Inventory and Templates for 0499
      name: PPDM Inventory
      description: PPDM Inventory for AWX
      source:
        - name: LAB1 Hosts
          description: Inventory for Lab1 Hosts

minio_group: minio-user
minio_user: minio-user
datapath: /home/minio
ansible_become_password: Password123!
download_url: https://dl.minio.io/server/minio/release/linux-amd64/minio.deb
minio_admin: minioadmin
minio_password: Password123!
vsphere:
  credentials:
    - name: vcenter01
      username: admin@vsphere.local
      password: Password123!
      host: vcenter01.demo.local
    - name: vault-vcenter
      username: admin@vsphere.local
      password: Password123!
      host: vault-vcenter.demo.local      
ppdd:
  project:
    name: ansible_ppdd
    description: Ansible PPDD Modules by Karsten Bott
    modules_url: https://github.com/dell-examples/ansible_ppdd.git
  credentials:
    - name: ddve-1
      username: sysadmin
      password: Password123!
      fqdn: ddve-01.demo.local
    - name: ddve-2
      username: sysadmin
      password: Password123!
      fqdn: ddve-02.demo.local
ppdm:
  release: 19.19
  project:
    name: ansible_ppdm
    description: Ansible PPDM Modules by Karsten Bott
    modules_url: https://github.com/dell-examples/ansible_ppdm.git
  credentials:
    - name: ppdm-1
      username: admin
      password: Password123!
      fqdn: ppdm-1.demo.local
    - name: ppdm-2
      username: admin
      password: Password123!
      fqdn: ppdm-2.demo.local
  assets:
    job_template: deploy ppdm assets templates
    label: ppdm_assets
    jt:
      query: 30.0 Query Assets
      adhoc_protection: 130.0 AdHoc Asset Protection
  agents:
    job_template: deploy ppdm agents templates
    team:
      name: App Team
      description: Team handling all App Agent stuff
    label: ppdm_agents
    user_1:
      username: app_user_1
      password: Password123!
      email: appuser@demo.local
    jt:
      list: 100.0 List Agents from PPDM
      download: 100.1 Download Agents
      set_dns: 100.2 Set DNS for Agents
      clear_hosts: 100.3 Clear hosts file windows agent
      deploy: 100.3 Copy and Deploy Agents from S3
      approve: 100.4 Create Whitelist Entry from Address Query
      uninstall: 100.9 Uninstall Windows Agent
  infra:
    team:
      name: PPDM Infra Team
      description: Team handling all PPDM Infrastructure ( Deploy, Update )
    label: ppdm_infra
    user_1:
      username: infra_user_1
      password: Password123!
      email: infrauser@demo.local
    update_job_template: deploy ppdm update templates
    jt:
      reset_sysdr_boost: _99.1 Reset Boost Password for SysDR 
      sysdr_ppdm: _99.2 Run Sysdr for PPDM
      approve_sysdr: _99.3 Approve for Sysdr
      upload_update: _9.1 Upload PPDM Update from S3
      precheck_update: _9.2 Precheck Update
      execute_update: _9.3 Update PPDM
      approve_update: _9.3 Approval for Update
      update_history: _9.4 Update History
      delete_update: _9.9 Delete PPDM Update
      deploy_ppdm: _1.0 Deploy PPDM from OVA
    wjt:
      sysdr_ppdm:
        name: 99 PPDM Sysdr Workflow
        description: This Workflow will execute a PPDM´s SysDR
      update_ppdm:
        name: 9 Update PPDM
        description: |
          This workflow will Upgrade PPDM using Packages from S3. The update must be available on the S3 Host ansible. (Prepare S3 using the Workflow 'deploy minio to ansible host')
          The package mus be in the format dellemc-ppdm-upgrade-sw-{release}.{build}.pkg on Bucket dps-products,  with the prefix /powerprotect/{release}, e.g. s3://dps-products/powerprotect/19.18/dellemc-ppdm-upgrade-sw-19.18.0-14.pkg
  k8s:
    wjt:
      namespace:
        query: 130.3 Query K8S Assets By Name
        state: 130.3 Query Namespaces by Protection State
        adhoc_protection: 130.5 AdHoc Protect K8S Asset
        add:
          name: 130.2 Add Namespace to Policy
          description: Assigns a Namespace asset from a Protection Policy
        remove:
          name: 130.2 Remove Namespace from Policy
          description: Unassigns a Namespace asset from a Protection Policy
      plc:
        list: 130.4 Get details of Kubernetes Policy
        create: 130.2 Create Kubernetes Protection Policy
    label: ppdm_k8s
    job_template: deploy ppdm k8s templates
    team: Kubernetes Team
    team_description: "They made us the new God´s"
    user_1:
      username: k8s_user_1
      password: Password123!
      email: k8suser@demo.local
    jt:
      add_ppdm_rbac: 130.1 Add K8S to PPDM
      namespace:
        query: 130.3 Query K8S Assets By Name
        state: 130.3 Query Namespaces by Protection State
        adhoc_protection: 130.5 AdHoc Protect K8S Asset
        add: 
          name: 130.2 Add Namespace to Policy
          description: Assigns a Namespace asset to a Protection Policy
        remove:
          name: 130.2 Remove Namespace from Policy
          description: Unassigns a Namespace asset from a Protection Policy
      plc:
        list: 130.4 Get all Kubernetes Policies
        create: 130.2 Create Kubernetes Protection Policy  
